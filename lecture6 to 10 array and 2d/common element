If x, y and z are same, we can simply print any of them as common element and move ahead in all three arrays.
Else If x < y, we can move ahead in ar1[] as x cannot be a common element.
Else If x > z and y > z), we can simply move ahead in ar3[] as z cannot be a common element.

#include<bits/stdc++.h>
using namespace std;


void commonelement(int arr1[],int arr2[],int arr3[] ,int n,int m,int o){
        int i=0,j=0,k=0;
        while(i<n && j<m && k<o){
            if(arr1[i]<arr2[j]){
                i++;
            }
            else if(arr2[j]<arr3[k]){
                j++;
            }
            else if(arr1[i] == arr2[j] && arr2[j] == arr3[k]){
                cout <<arr3[k]<<" ";
                i++;
                j++;
                k++;
            }
            else{
                k++;
            }

        }
}
int main(){
int arr1[] = {1, 5, 10, 20, 40, 80};
int arr2[] = {6, 7, 20, 80, 100};
int arr3[] = {3, 4, 15, 20, 30, 70, 80, 120};

commonelement(arr1,arr2,arr3,6,5,8);


}
